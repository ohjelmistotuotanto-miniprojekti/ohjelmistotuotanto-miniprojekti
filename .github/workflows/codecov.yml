name: Code Coverage and Badge

on:
  push:
    branches:
      - codecov
  pull_request:

jobs:
  run-tests-and-generate-badge:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up .NET
      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 9.0

      # Install dependencies
      - name: Install dependencies
        run: |
          dotnet restore

      # Clean Build
      - name: Clean Build
        run: dotnet clean

      # Build tests
      - name: Build Tests
        run: dotnet build tests/ReferenceManager.Tests/ReferenceManager.Tests.csproj

      # Run tests with coverage
      - name: Run tests with coverage
        run: |
          dotnet test tests/ReferenceManager.Tests/ReferenceManager.Tests.csproj \
          --collect:"XPlat Code Coverage" \
          --results-directory ./TestResults \
          -p:CollectCoverage=true \
          -p:CoverletOutputFormat=cobertura \
          -p:CoverletOutput=./TestResults/coverage.cobertura.xml \
          --diag:TestExecution.log

      # Locate Coverage File
      - name: Locate Coverage File
        id: locate-coverage
        run: |
          coverage_file=$(find ./TestResults -name 'coverage.cobertura.xml' | head -n 1)
          if [ -z "$coverage_file" ]; then
            echo "Coverage file not found!"
            exit 1
          fi
          echo "COVERAGE_FILE_PATH=$coverage_file" >> $GITHUB_ENV
        shell: bash

      # Run Python script to generate badge
      - name: Generate Coverage Badge
        run: |
          python3 scripts/parse_coverage.py
        env:
          COVERAGE_FILE_PATH: ${{ env.COVERAGE_FILE_PATH }}

      # Upload Coverage Badge as an Artifact
      - name: Upload Coverage Badge
        uses: actions/upload-artifact@v3
        with:
          name: coverage-badge
          path: coverage_badge.md
