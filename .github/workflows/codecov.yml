name: Code Coverage and Badge

on:
  push:
    branches:
      - codecov
  pull_request:

jobs:
  run-tests-and-generate-badge:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up .NET
      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 9.0

      # Install dependencies
      - name: Install dependencies
        run: dotnet restore

      # Build the project
      - name: Build the project
        run: dotnet build --no-restore

      # Clean TestResults folder (optional, for clean runs)
      - name: Clean TestResults Folder
        run: rm -rf ./TestResults

      # Run tests with coverage
      - name: Run tests with coverage
        run: |
          dotnet test --collect:"XPlat Code Coverage" \
          --results-directory ./TestResults \
          -p:CollectCoverage=true \
          -p:CoverletOutputFormat=cobertura \
          -p:CoverletOutput=./TestResults/coverage.cobertura.xml

      # Locate the coverage file
      - name: Locate Coverage File
        id: locate-coverage
        run: |
          echo "Looking for coverage file in TestResults folder..."
          coverage_file=$(find ./TestResults -name 'coverage.cobertura.xml' | head -n 1)
          if [ -z "$coverage_file" ]; then
            echo "Error: Coverage file not found in TestResults folder!"
            exit 1
          fi
          echo "Located coverage file: $coverage_file"
          echo "COVERAGE_FILE_PATH=$coverage_file" >> $GITHUB_ENV
        shell: bash

      # Debug: Log environment variables (optional, for troubleshooting)
      - name: Debug Environment Variables
        run: env

      # Run Python script to generate badge
      - name: Generate Coverage Badge
        run: |
          python3 scripts/parse_coverage.py
        env:
          COVERAGE_FILE_PATH: ${{ env.COVERAGE_FILE_PATH }}

      # Commit and push badge changes
      - name: Commit and push badge
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add coverage_badge.md
          git commit -m "Update coverage badge [skip ci]" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
